[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]
force-include = {"src/py.typed" = "src/py.typed"}

[project]
name = "helios-trading-bot"
version = "1.5.0"
description = "A sophisticated cryptocurrency trading bot for Binance"
authors = [
    {name = "Helios Trading Bot Team", email = "dev@helios-trading.com"},
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
keywords = ["trading", "cryptocurrency", "binance", "grid-trading", "algorithmic-trading", "bot"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",

    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

# Core Dependencies
dependencies = [
    # Cryptocurrency Trading APIs
    "python-binance>=1.0.17",
    "ccxt>=4.1.0",
    # Data Analysis and Processing
    "pandas>=2.2.2",
    "numpy>=1.24.0",
    "ta>=0.10.2",
    "polars>=0.20.0",
    # Database and Storage
    "asyncpg>=0.29.0", # PostgreSQL async driver
    "redis>=5.0.4", # Redis async client
    "boto3>=1.34.120", # AWS/R2 S3-compatible client
    # API and Web
    "requests>=2.28.0",
    "aiohttp>=3.9.5",
    "websockets>=11.0.0",
    # Configuration and Environment
    "python-dotenv>=1.0.1",
    # Logging and Monitoring
    "loguru>=0.7.0",
    # Mathematical Operations
    "scipy>=1.10.0",
    # Date and Time
    "python-dateutil>=2.8.0",
    # Async Support
    "asyncio-throttle>=1.0.2",
    "uvloop>=0.19.0",
]

[project.optional-dependencies]
# Development Dependencies
dev = [
    "pytest>=7.2.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

# Documentation Dependencies
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=0.18.0",
]

# Visualization Dependencies
viz = [
    "matplotlib>=3.6.0",
    "plotly>=5.13.0",
    "seaborn>=0.12.0",
]

# Notifications Dependencies
notifications = [
    "python-telegram-bot>=20.0.0",
    "discord.py>=2.3.0",
]

# Backtesting Dependencies
backtest = [
    "zipline-reloaded>=2.2.0",
    "pyfolio-reloaded>=0.9.2",
    "empyrical>=0.5.5",
]

# All optional dependencies
all = [
    "helios-trading-bot[dev,docs,viz,notifications,backtest]"
]

[project.urls]
Homepage = "https://github.com/laraib-sidd/binance-bot"
Documentation = "https://github.com/laraib-sidd/binance-bot/docs"
Repository = "https://github.com/laraib-sidd/binance-bot"
"Bug Tracker" = "https://github.com/laraib-sidd/binance-bot/issues"

[project.scripts]
helios = "src.main:main"
# backtest entrypoint disabled until implemented
helios-setup = "scripts.setup_dev_environment:main"
helios-test = "scripts.test_environment:main"
helios-setup-phase13 = "scripts.setup_phase_1_3:main"
helios-test-pipeline = "scripts.test_data_pipeline:run"

# Tool Configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = ["E501"] # line too long, handled by black

[tool.ruff.lint.isort]
known-first-party = ["src"]
force-sort-within-sections = true
combine-as-imports = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "binance.*",
    "ccxt.*",
    "ta.*",
    "loguru.*",
    "asyncpg",
    "redis.*",
    "boto3",
    "botocore.*",
    "aiohttp"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
asyncio_mode = "auto"
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "backtest: marks tests as backtesting tests",
    "api: marks tests that require API access",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "*/test_*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

# UV Configuration
[tool.uv]
dev-dependencies = [
    "pytest>=7.2.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.group.dev.dependencies]
pytest = "^8.2.2"
pytest-asyncio = "^0.23.7"
pytest-cov = "^5.0.0"
pre-commit = "^3.7.1"
black = "^24.4.2"
ruff = "^0.5.0"
pytest-mock = "^3.12.0"
